{"version":3,"file":"static/js/389.c4e2cc6b.chunk.js","mappings":"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","sources":["Modules/WeatherData/Temperature.tsx","Modules/WeatherData/Type.tsx","Modules/WeatherData/Mocks.ts","Modules/TimeFetcher.tsx","Modules/WeatherData/Wind/Arrow.tsx","Modules/WeatherData/Wind/Compass.tsx","Modules/WeatherData/Wind.tsx","Modules/WeatherData/Details.tsx","Helpers/Modal.tsx","Modules/WeatherFetcher.tsx"],"sourcesContent":["import React from 'react';\r\n\r\ninterface temp {\r\n    temp: number;\r\n    feels_like: number;\r\n    units: string;\r\n}\r\n\r\nconst Temperature = ({temp, feels_like, units}: temp) => {\r\n    return (\r\n        <div id=\"temp\" className=\"mainBoxes\">\r\n            <p>Temperature: {temp}°{units === 'F' ? 'F' : 'C'}</p>\r\n            <p>Feels like: {feels_like}°{units === 'F' ? 'F' : 'C'}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Temperature;\r\n","import React, {useEffect} from 'react';\r\n\r\ninterface WeatherType {\r\n    type: {\r\n        description: string;\r\n        icon: string;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nconst Type = ({type}: WeatherType) => {\r\n    const [imageUrl, setImageUrl] = React.useState<string>('https:' + type.icon);\r\n\r\n    useEffect(() => {\r\n        let timeoutId: NodeJS.Timeout | null = null;\r\n        const resizeListener = () => {\r\n            if (timeoutId) {\r\n                clearTimeout(timeoutId);\r\n            }\r\n            const weatherIcon = document.getElementById('icon') as HTMLImageElement;\r\n            const size = weatherIcon.width>64?'128x128':'64x64';\r\n            timeoutId = setTimeout(() => setImageUrl(imageUrl.slice(0,35) + size + imageUrl.slice(40)), 100);\r\n        }\r\n        window.addEventListener('resize',resizeListener);\r\n        return () => {\r\n            window.removeEventListener('resize',resizeListener);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div id=\"type\" className=\"mainBoxes\">\r\n            <h3>{type.description}</h3>\r\n            <img id={'icon'} width={128} height={128} src={imageUrl} alt={type.description}/>\r\n        </div>\r\n    );\r\n};\r\nexport default Type;\r\n","export const ASTRONOMY = {\r\n    \"location\": {\r\n        \"name\": \"Kolbacz\",\r\n        \"region\": \"\",\r\n        \"country\": \"Poland\",\r\n        \"lat\": 53.3,\r\n        \"lon\": 14.81,\r\n        \"tz_id\": \"Europe/Warsaw\",\r\n        \"localtime_epoch\": 1641590350,\r\n        \"localtime\": \"2022-01-07 22:19\"\r\n    },\r\n    \"astronomy\": {\r\n        \"astro\": {\r\n            \"sunrise\": \"08:14 AM\",\r\n            \"sunset\": \"04:01 PM\",\r\n            \"moonrise\": \"11:10 AM\",\r\n            \"moonset\": \"10:08 PM\",\r\n            \"moon_phase\": \"Waxing Crescent\",\r\n            \"moon_illumination\": \"30\"\r\n        }\r\n    }\r\n}\r\n\r\nexport const WEATHER = {\r\n    \"location\": {\r\n        \"name\": \"Kolbacz\",\r\n        \"region\": \"\",\r\n        \"country\": \"Poland\",\r\n        \"lat\": 53.3,\r\n        \"lon\": 14.81,\r\n        \"tz_id\": \"Europe/Warsaw\",\r\n        \"localtime_epoch\": 1641590350,\r\n        \"localtime\": \"2022-01-07 22:19\"\r\n    },\r\n    \"current\": {\r\n        \"last_updated_epoch\": 1641590100,\r\n        \"last_updated\": \"2022-01-07 22:15\",\r\n        \"temp_c\": 1.0,\r\n        \"temp_f\": 33.8,\r\n        \"is_day\": 0,\r\n        \"condition\": {\"text\": \"Overcast\", \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/122.png\", \"code\": 1009},\r\n        \"wind_mph\": 3.8,\r\n        \"wind_kph\": 6.1,\r\n        \"wind_degree\": 190,\r\n        \"wind_dir\": \"S\",\r\n        \"pressure_mb\": 1010.0,\r\n        \"pressure_in\": 29.83,\r\n        \"precip_mm\": 0.1,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 100,\r\n        \"cloud\": 100,\r\n        \"feelslike_c\": -3.2,\r\n        \"feelslike_f\": 26.2,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"uv\": 1.0,\r\n        \"gust_mph\": 13.9,\r\n        \"gust_kph\": 22.3\r\n    }\r\n}\r\n","import React, {useEffect, Suspense, lazy} from 'react';\r\nimport axios from 'axios';\r\n//import DayNightCycle from \"./WeatherData/DayNightCycle\";\r\nimport {ASTRONOMY} from \"./WeatherData/Mocks\";\r\n\r\nconst DayNightCycle = lazy(() => import('./WeatherData/DayNightCycle'));\r\n\r\ninterface Time {\r\n    moon_illumination: number;\r\n    moon_phase: string;\r\n    moonrise: number;\r\n    moonset: number;\r\n    sunrise: number;\r\n    sunset: number;\r\n    localtime_epoch: number;\r\n    localtime: string;\r\n}\r\n\r\nconst convertTime = (time: string) => {\r\n    return Math.floor(Date.parse(new Date().toDateString() + ' ' + time) / 1000);\r\n}\r\n\r\nconst TimeFetcher = ({coords}: { coords: string }) => {\r\n    const [time, timeSetter] = React.useState<Time | null>(null);\r\n\r\n    const options = {\r\n        method: 'GET',\r\n        url: 'https://weatherapi-com.p.rapidapi.com/astronomy.json',\r\n        params: {q: coords},\r\n        headers: {\r\n            'x-rapidapi-host': 'weatherapi-com.p.rapidapi.com',\r\n            'x-rapidapi-key': '0bedbfb065msh4d74772935f4250p1f5b5cjsn0208d1ba7eb7'\r\n        }\r\n    };\r\n\r\n    const isMock = async (mock: boolean) => {\r\n        if (mock) {\r\n            return ASTRONOMY;\r\n        }\r\n        let response = ASTRONOMY;\r\n        // @ts-ignore\r\n        await axios.request(options).then(res => {\r\n            response = res.data;\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n        return response;\r\n    };\r\n\r\n    useEffect(() => {\r\n        isMock(false).then(data => {\r\n            timeSetter(\r\n                {\r\n                    moon_illumination: parseInt(data.astronomy.astro.moon_illumination),\r\n                    moon_phase: data.astronomy.astro.moon_phase,\r\n                    moonrise: convertTime(data.astronomy.astro.moonrise),\r\n                    moonset: convertTime(data.astronomy.astro.moonset),\r\n                    sunrise: convertTime(data.astronomy.astro.sunrise),\r\n                    sunset: convertTime(data.astronomy.astro.sunset),\r\n                    localtime_epoch: data.location.localtime_epoch,\r\n                    localtime: data.location.localtime\r\n                }\r\n            )\r\n        })\r\n    }, [coords]);\r\n\r\n    if (time === null) return <div>Loading...</div>;\r\n    const timeDifference = Math.floor(Date.parse(time.localtime) / 1000) - time.localtime_epoch;\r\n    return (\r\n        <DayNightCycle sunrise={time.sunrise} sunset={time.sunset}\r\n                       localtime_epoch={Math.floor(Date.parse(time.localtime) / 1000)} timeDifference={timeDifference}\r\n                       moonPhase={time.moon_phase} moonIllumination={time.moon_illumination}/>\r\n    )\r\n}\r\n\r\nexport default TimeFetcher;\r\n","import React from 'react';\r\n\r\nconst Arrow = () => {\r\n    return (\r\n        <svg width=\"53\" height=\"53\" viewBox=\"0 0 53 53\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M13.76 16.518L36.663 39.421L39.491 36.593L16.126 13.397L14.326 14.256L13.76 16.518Z\"\r\n                  fill=\"#715C3A\"/>\r\n            <path d=\"M35.637 37.566L36.737 46.366L53 52.73L46.636 36.466L37.836 35.366L35.637 37.566Z\" fill=\"#8F8F8F\"/>\r\n            <path\r\n                d=\"M6 16.27V18.27H8V20.306L18 20.27V18.27L20 17.27V9.27H18V7.27H16V4.27H14V2.27H12V0.269997H8V8.27H0V12.27H2V14.27H4V16.27H6Z\"\r\n                fill=\"#7D7D7D\"/>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Arrow;\r\n","import React from 'react';\r\nimport {motion} from \"framer-motion\"\r\nimport {useInView} from \"react-intersection-observer\";\r\nimport Arrow from \"./Arrow\";\r\n\r\nconst spring = {\r\n    type: \"spring\",\r\n    stiffness: 500,\r\n    damping: 40,\r\n    mass: 20\r\n};\r\n\r\n\r\nconst Compass = ({deg}: { deg: number }) => {\r\n    const {ref, inView} = useInView({\r\n        threshold: .8\r\n    })\r\n\r\n    return (\r\n        <div id=\"compass\">\r\n            <svg width=\"150\" height=\"150\" viewBox=\"0 0 508 508\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path\r\n                    d=\"M254 508C394.28 508 508 394.28 508 254C508 113.72 394.28 0 254 0C113.72 0 0 113.72 0 254C0 394.28 113.72 508 254 508Z\"\r\n                    fill=\"#324A5E\"/>\r\n                <path\r\n                    d=\"M254 447.2C360.701 447.2 447.2 360.701 447.2 254C447.2 147.299 360.701 60.8 254 60.8C147.299 60.8 60.8 147.299 60.8 254C60.8 360.701 147.299 447.2 254 447.2Z\"\r\n                    fill=\"#84DBFF\"/>\r\n                <path\r\n                    d=\"M254 420.4C345.9 420.4 420.4 345.9 420.4 254C420.4 162.1 345.9 87.6 254 87.6C162.1 87.6 87.6 162.1 87.6 254C87.6 345.9 162.1 420.4 254 420.4Z\"\r\n                    fill=\"white\"/>\r\n                <path\r\n                    d=\"M250.8 134.4C258.09 134.4 264 128.49 264 121.2C264 113.91 258.09 108 250.8 108C243.51 108 237.6 113.91 237.6 121.2C237.6 128.49 243.51 134.4 250.8 134.4Z\"\r\n                    fill=\"#2C9984\"/>\r\n                <path\r\n                    d=\"M250.8 395.2C258.09 395.2 264 389.29 264 382C264 374.71 258.09 368.8 250.8 368.8C243.51 368.8 237.6 374.71 237.6 382C237.6 389.29 243.51 395.2 250.8 395.2Z\"\r\n                    fill=\"#2C9984\"/>\r\n                <path\r\n                    d=\"M381.6 264.8C388.89 264.8 394.8 258.89 394.8 251.6C394.8 244.31 388.89 238.4 381.6 238.4C374.31 238.4 368.4 244.31 368.4 251.6C368.4 258.89 374.31 264.8 381.6 264.8Z\"\r\n                    fill=\"#2C9984\"/>\r\n                <path\r\n                    d=\"M120.4 264.8C127.69 264.8 133.6 258.89 133.6 251.6C133.6 244.31 127.69 238.4 120.4 238.4C113.11 238.4 107.2 244.31 107.2 251.6C107.2 258.89 113.11 264.8 120.4 264.8Z\"\r\n                    fill=\"#2C9984\"/>\r\n            </svg>\r\n            <motion.div\r\n                ref={ref}\r\n                id=\"arrow\"\r\n                transition={spring}\r\n                initial=\"hidden\"\r\n                animate={inView ? \"visible\" : ''}\r\n                variants={{\r\n                    visible: {rotate: deg},\r\n                    hidden: {rotate: deg - 90}\r\n                }}\r\n            >\r\n                <Arrow/>\r\n            </motion.div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Compass;\r\n","import React from 'react';\r\nimport Compass from './Wind/Compass';\r\n\r\ninterface windProps {\r\n    speed: number;\r\n    speed_mph: number;\r\n    deg: number;\r\n    gust: number;\r\n    gust_mph: number;\r\n    units: string;\r\n}\r\n\r\nconst Wind = ({speed, speed_mph, gust, gust_mph, deg, units}: windProps) => {\r\n    return (\r\n        <div id={\"wind\"} className={\"mainBoxes\"}>\r\n            <div className={'wrapper'}>\r\n                <div id={'values'}>\r\n                    <h3>Wind</h3>\r\n                    <p>Speed: {units === 'F' ? speed_mph + \" mph\" : speed + \" km/h\"}</p>\r\n                    <p>Gust: {units === 'F' ? gust_mph + \" mph\" : gust + \" km/h\"}</p>\r\n                    <p>{deg}°</p>\r\n                </div>\r\n                <Compass deg={deg - 135}/>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Wind;\r\n","import React from 'react';\r\n\r\ninterface details {\r\n    humidity: number;\r\n    pressure: number;\r\n    clouds: number;\r\n}\r\n\r\nconst Details = ({humidity, pressure, clouds}: details) => {\r\n    return (\r\n        <div id=\"details\" className=\"mainBoxes\">\r\n            <h3>Details</h3>\r\n            <p>Humidity: {humidity}%</p>\r\n            <p>Pressure: {pressure} hPa</p>\r\n            <p>Clouds: {clouds}%</p>\r\n        </div>\r\n    );\r\n};\r\nexport default Details;\r\n","import React from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\n\r\nconst backdrop = {\r\n    visible: { opacity: 1 },\r\n    hidden: { opacity: 0 },\r\n}\r\n\r\nconst modal = {\r\n    hidden: { y: \"-100vh\", opacity: 0 },\r\n    visible: {\r\n        y: \"200px\",\r\n        opacity: 1,\r\n        transition: { delay: 0.5 }\r\n    },\r\n}\r\n\r\ninterface modalProps {\r\n    showModal: boolean,\r\n    setShowModal: React.Dispatch<React.SetStateAction<boolean>>,\r\n    buttonText: string | string[],\r\n    promptText: string,\r\n    buttonAction?: () => void\r\n}\r\n\r\nconst Modal = ({ showModal, setShowModal, buttonText, promptText, buttonAction }:modalProps) => {\r\n    return (\r\n        <AnimatePresence>\r\n            { showModal && (\r\n                <motion.div className=\"backdrop\"\r\n                            variants={backdrop}\r\n                            initial=\"hidden\"\r\n                            animate=\"visible\"\r\n                            exit=\"hidden\"\r\n                            onClick={()=>setShowModal(false)}\r\n                >\r\n                    <motion.div className=\"modal\"\r\n                                variants={modal}\r\n                    >\r\n                        <p>{promptText}</p>\r\n                        <button onClick={()=>setShowModal(false)}>{buttonText}</button>\r\n                    </motion.div>\r\n                </motion.div>\r\n            )}\r\n        </AnimatePresence>\r\n    )\r\n}\r\n\r\nexport default Modal;\r\n","import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Temperature from \"./WeatherData/Temperature\";\r\nimport Type from \"./WeatherData/Type\";\r\nimport TimeFetcher from \"./TimeFetcher\";\r\nimport Wind from \"./WeatherData/Wind\";\r\nimport {WEATHER} from \"./WeatherData/Mocks\";\r\nimport Details from \"./WeatherData/Details\";\r\nimport Modal from \"../Helpers/Modal\";\r\nimport {scrollToDetails} from \"../Helpers/ScrollButton\";\r\n\r\n\r\ninterface Weather {\r\n    temp: number;\r\n    temp_f: number;\r\n    feels_like: number;\r\n    feels_like_f: number;\r\n    pressure: number;\r\n    humidity: number;\r\n    clouds: number;\r\n    weather: {\r\n        description: string;\r\n        icon: string;\r\n    };\r\n    wind: {\r\n        speed: number;\r\n        speed_mph: number;\r\n        deg: number;\r\n        gust: number;\r\n        gust_mph: number;\r\n    };\r\n}\r\n\r\ninterface Location {\r\n    name: string;\r\n    country: string;\r\n    lat: number;\r\n    lon: number;\r\n}\r\n\r\ninterface weatherFetcherProps {\r\n    coordinates: number[];\r\n    units: string;\r\n}\r\n\r\nconst correctCoordinates = (coordinates: number): number => {\r\n    while (coordinates > 180) {\r\n        coordinates = coordinates - 360;\r\n    }\r\n    while (coordinates < -180) {\r\n        coordinates = coordinates + 360;\r\n    }\r\n    return coordinates;\r\n}\r\n\r\nconst WeatherFetcher = ({coordinates, units}: weatherFetcherProps) => {\r\n    const [weather, setWeather] = React.useState<Weather | null>(null);\r\n    const [location, setLocation] = React.useState<Location | null>(null);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [message, setMessage] = useState(\"xd\");\r\n\r\n    const coords: string = correctCoordinates(coordinates[1]) + ',' + correctCoordinates(coordinates[0]);\r\n    const options = {\r\n        method: 'GET',\r\n        url: 'https://weatherapi-com.p.rapidapi.com/current.json',\r\n        params: {q: coords},\r\n        headers: {\r\n            'x-rapidapi-host': 'weatherapi-com.p.rapidapi.com',\r\n            'x-rapidapi-key': '0bedbfb065msh4d74772935f4250p1f5b5cjsn0208d1ba7eb7'\r\n        }\r\n    };\r\n\r\n    const isMock = async (mock: boolean) => {\r\n        if (mock) {\r\n            return WEATHER;\r\n        }\r\n        let response;\r\n        // @ts-ignore\r\n        await axios.request(options).then(res => {\r\n            response = res.data;\r\n            scrollToDetails();\r\n        }).catch(err => {\r\n            console.log(err);\r\n            setShowModal(true);\r\n            if(err.response){\r\n                setMessage(err.response.data.error.message);\r\n            }else{\r\n                setMessage(\"Something went wrong\");\r\n            }\r\n\r\n        });\r\n        return response;\r\n    };\r\n\r\n    useEffect(() => {\r\n        isMock(false).then(data => {\r\n            if(data){\r\n                setWeather(\r\n                    {\r\n                        temp: data.current.temp_c,\r\n                        temp_f: data.current.temp_f,\r\n                        feels_like: data.current.feelslike_c,\r\n                        feels_like_f: data.current.feelslike_f,\r\n                        pressure: data.current.pressure_mb,\r\n                        humidity: data.current.humidity,\r\n                        clouds: data.current.cloud,\r\n                        weather: {\r\n                            description: data.current.condition.text,\r\n                            icon: data.current.condition.icon,\r\n                        },\r\n                        wind: {\r\n                            speed: data.current.wind_kph,\r\n                            speed_mph: data.current.wind_mph,\r\n                            deg: data.current.wind_degree,\r\n                            gust: data.current.gust_kph,\r\n                            gust_mph: data.current.gust_mph,\r\n                        },\r\n                    }\r\n                );\r\n                setLocation(\r\n                    {\r\n                        name: data.location.name,\r\n                        country: data.location.country,\r\n                        lat: data.location.lat,\r\n                        lon: data.location.lon,\r\n                    }\r\n                );\r\n            }\r\n        });\r\n    }, [coordinates]);\r\n\r\n    const weatherOutput = () => {\r\n        if (weather && location && coordinates) {\r\n            return (\r\n                <div id={\"weather\"}>\r\n                    <Modal showModal={showModal} setShowModal={setShowModal} buttonText={\"Ok\"} promptText={message}/>\r\n                    <div className=\"mainBoxes\">\r\n                        <h1>Location: {location.name}</h1>\r\n                        <h2>Country: {location.country}</h2>\r\n                    </div>\r\n                    <Temperature temp={units === 'F' ? weather.temp_f : weather.temp}\r\n                                 feels_like={units === 'F' ? weather.feels_like_f : weather.feels_like} units={units}/>\r\n                    <Wind speed={weather.wind.speed} speed_mph={weather.wind.speed_mph} deg={weather.wind.deg}\r\n                          gust={weather.wind.gust} gust_mph={weather.wind.gust_mph} units={units}/>\r\n                    <Type type={weather.weather}/>\r\n                    <Details humidity={weather.humidity} pressure={weather.pressure} clouds={weather.clouds}/>\r\n                    <TimeFetcher coords={coords}/>\r\n                </div>\r\n            );\r\n        } else {\r\n            return <p>Loading...</p>;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {weatherOutput()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WeatherFetcher;\r\n"],"names":["temp","feels_like","units","id","className","type","React","icon","imageUrl","setImageUrl","useEffect","timeoutId","resizeListener","clearTimeout","size","document","getElementById","width","setTimeout","slice","window","addEventListener","removeEventListener","description","height","src","alt","ASTRONOMY","WEATHER","DayNightCycle","lazy","convertTime","time","Math","floor","Date","parse","toDateString","coords","timeSetter","options","method","url","params","q","headers","isMock","mock","response","axios","then","res","data","catch","err","console","log","moon_illumination","parseInt","astronomy","astro","moon_phase","moonrise","moonset","sunrise","sunset","localtime_epoch","location","localtime","timeDifference","moonPhase","moonIllumination","viewBox","fill","xmlns","d","spring","stiffness","damping","mass","deg","useInView","threshold","ref","inView","motion","transition","initial","animate","variants","visible","rotate","hidden","speed","speed_mph","gust","gust_mph","humidity","pressure","clouds","backdrop","opacity","modal","y","delay","showModal","setShowModal","buttonText","promptText","buttonAction","AnimatePresence","exit","onClick","correctCoordinates","coordinates","weather","setWeather","setLocation","useState","message","setMessage","scrollToDetails","error","current","temp_c","temp_f","feelslike_c","feels_like_f","feelslike_f","pressure_mb","cloud","condition","text","wind","wind_kph","wind_mph","wind_degree","gust_kph","name","country","lat","lon"],"sourceRoot":""}